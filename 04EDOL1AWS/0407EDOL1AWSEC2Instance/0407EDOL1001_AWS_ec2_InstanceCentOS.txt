aws ec2 run-instances \
--image-id ami-06833e5c67e7c34fa \
--instance-type t2.micro \
--count 1 \
--subnet-id  subnet-0a8220019a5530587 \
--security-group-ids sg-0493ee599c4918dcc \
--key-name y-kolyada-key-pair-rsa \
--associate-public-ip-address \
--tag-specifications 'ResourceType=instance,Tags=[{Key=Name,Value=web-server-01},{Key=OS,Value=CentOS}]'
#--tag-specifications 'ResourceType=instance,Tags=[{Key=Name,Value=web-server-02},{Key=OS,Value=CentOS}]' \
#--user-data file://my_script.txt

aws ec2 describe-instances \
--filters  "Name=instance-state-name,Values=running" \
--query "Reservations[*].Instances[*].{PublicIP:PublicIpAddress,Name:Tags[?Key=='Name']|[0].Value,Status:State.Name,InstanceID:InstanceId}" \
--output text

INST=$(aws ec2 describe-instances \
--filters  Name=instance-state-name,Values=running Name=tag:Name,Values=web-server-01 \
--query "Reservations[*].Instances[*].{InstanceID:InstanceId}" \
--output text)

aws ec2 describe-instances \
--instance-id $INST

aws ec2 describe-instances \
--instance-id $INST

aws ec2 create-tags --resources $INST --tag Key=Name,Value="web-server-01"

aws ec2 stop-instances --instance-ids $INST

aws ec2 terminate-instances --instance-ids $INST
