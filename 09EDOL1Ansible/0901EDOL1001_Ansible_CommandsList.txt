ssh-keygen -t rsa -f ./public_keys/devops_id_rsa -C devops

# install
python -m pip show ansible
python3 -m pip install --user ansible
whereis ansible
ansible --version
ansible-core --version
ansible-galaxy --version

# inventory
grep inventory /etc/ansible/ansible.cfg
ansible all --list-hosts
ansible development --list-hosts
ansible all -m ping
ansible localhost -m ping
# vim myhosts
# [www]
# host[1:2]
#
# [db]
# 192.168.1.1[1:2]
#
# [kharkiv]
# host1
# 192.168.1.11
#
# [kyiv]
# host2
# 192.168.1.12
#
# [ukraine:children]
# kharkiv
# kyiv
ansible -i myhosts ukraine --list-hosts

# vim ~/.vimrc
# set bg=dark
# syntax on
# autocmd FileType yaml setlocal ai ts=2 sw=2 et
# vim inventory.yml
# ---
# all:
#   children:
#     ukraine:
#       children:
#         kharkiv:
#           hosts:
#             www1.example.com:
#             db1.example.com:
#         kyiv:
#           hosts:
#             www2.example.com:
#             db2.example.com:
#           vars:
#             ntp_server: ntp.example.com
#     database:
#       hosts:
#         db1.example.com:
#         db2.example.com:
#     www:
#       hosts:
#         www1.example.com:
#         www2.example.com:
ansible -i inventory.yml kharkiv --list-hosts

# ad-hoc commands
ansible all -i inventory -m user -a "name=jon state=present"
ansible all -i inventory -m user -a "name=jon state=absent"
ansible-doc user 

# variables in inventory

# vim myhosts
# [www]
# 192.168.1.1[1:2]
#
# [rhel]
# 192.168.1.11
#
# [ubuntu]
# 192.168.1.12
#
# [rhel:vars]
# apache_package = httpd
#
# [ubuntu:vars]
# apache_package = apache2
ansible rhel -m yum -a 'name="{{ apache_package }}" state=installed'
ansible ubuntu -m apt -a 'name="{{ apache_package }}" state=installed'

# vim inventory.yml
# ---
# all:
#   children:
#     development:
#       hosts:
#         192.168.2.4: {}
#         192.168.2.5: {}
#     rhel:
#       vars:
#         apache_package: httpd
#       children:
#           hosts:
#             192.168.2.4: {}
#             192.168.2.4: {}
#           vars:
#             ntp_server: ntp.example.com
#     ubuntu:
#       vars:
#         apache_package: apache2
#       children:
#           hosts:
#             192.168.2.5: {}
ansible rhel -i inventory.yml -m yum -a 'name="{{ apache_package }}" state=absent'
ansible ubuntu -i inventory.yml -m apt -a 'name="{{ apache_package }}" state=absent'

# facts
ansible dev001 -m ansible.builtin.gather_facts
ansible dev001 -m setup
ansible dev001 -m setup | wc -l

# playbook "create_devops_user"
ansible-playbook ansible/create_devops_user.yml --syntax-check
ansible-playbook ansible/create_devops_user.yml -v
ansible-playbook ansible/create_devops_user.yml

# vault
ansible-vault encrypt ansible/group_vars/all
ansible-vault encrypt ansible/group_vars/development
ansible-playbook --vault-id @prompt ansible/delete_users.yml
ansible-playbook --vault-password-file ./p ansible/copy_keys.yml

# ansible-doc <module>
ansible-doc ping
ansible-doc -l
ansible-doc -l | grep timezone

# Insible plagin for Vagrant
vagrant provision --provision-with ansible